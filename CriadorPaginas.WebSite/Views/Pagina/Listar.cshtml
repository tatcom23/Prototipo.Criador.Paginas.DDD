@model List<Paginas.Application.DTOs.PaginaDTO>
@{
    ViewData["Title"] = "Lista de Páginas";
    int page = ViewBag.Page ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalCount = ViewBag.TotalCount ?? (Model?.Count ?? 0);
    int totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);
    string BuildPageUrl(int p) => Url.Action("Listar", "Pagina", new { page = p, pageSize = pageSize })!;
}
@functions {
    private static string StripHtml(string input)
    {
        if (string.IsNullOrWhiteSpace(input)) return string.Empty;
        return System.Net.WebUtility.HtmlDecode(System.Text.RegularExpressions.Regex.Replace(input, "<.*?>", string.Empty));
    }
    private static string Truncate(string input, int max = 220)
    {
        if (string.IsNullOrEmpty(input)) return string.Empty;
        var s = input.Trim();
        return s.Length <= max ? s : s.Substring(0, max).TrimEnd() + "…";
    }
    private static string Snippet(string html, int max = 220)
    {
        return Truncate(StripHtml(html), max);
    }
}

<!-- 🔹 FONT AWESOME CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">

<!-- 🔹 LAYOUT PRINCIPAL -->
<div class="d-flex min-vh-100 bg-body-tertiary">
    <!-- 🔹 MENU LATERAL -->
    <aside class="bg-white border-end shadow-sm p-4" style="width: 240px;">
        <div class="text-center mb-4">
            <h5 class="fw-bold text-primary mb-0">Menu</h5>
            <small class="text-secondary">Gerenciamento</small>
        </div>
        <nav class="nav flex-column gap-3">
            <a href="@Url.Action("Dashboard", "Pagina")"
               class="btn btn-light border text-start d-flex align-items-center gap-2 shadow-sm hover-bright mb-2">
                <i class="fa-solid fa-gauge-high text-info fs-5  mx-1"></i> <span> Dashboard</span>
            </a>
            <a href="@Url.Action("Index", "Pagina")"
               class="btn btn-primary text-start d-flex align-items-center gap-2 shadow-sm hover-bright mb-2">
                <i class="fa-solid fa-plus text-white fs-5  mx-1"></i> <span> Nova Página</span>
            </a>
        </nav>
    </aside>

    <!-- 🔹 CONTEÚDO PRINCIPAL -->
    <main class="flex-grow-1 p-4">
        <div class="d-flex justify-content-between align-items-center mb-4 border-bottom pb-2">
            <h1 class="fw-semibold text-dark mb-0">
                <i class="fa-solid fa-file-lines text-primary me-2"></i> Lista de Páginas
            </h1>
            <form method="get" asp-action="Listar" class="d-flex align-items-center gap-2">
                <label for="pageSize" class="form-label text-secondary mb-0 small  mx-2">Itens por página: </label>
                <select name="pageSize" id="pageSize"
                        class="form-select form-select-sm rounded shadow-sm border-secondary-subtle"
                        onchange="this.form.submit()" style="width: 90px;">
                    @{
                        var sizes = new[] { 5, 10, 20, 50 };
                        foreach (var s in sizes)
                        {
                            <option value="@s" selected="@(s == pageSize)">@s</option>
                        }
                    }
                </select>
            </form>
        </div>

        <!-- 🔹 LISTAGEM -->
        @if (Model?.Any() == true)
        {
            @foreach (var pagina in Model.Where(p => p.CdPai == null))
            {
                <div class="card mb-3 border-0 shadow-sm rounded-3 overflow-hidden fade-in">
                    <div class="card-header d-flex justify-content-between align-items-center text-white"
                         style="background: linear-gradient(90deg, #0d6efd, #4b90ff);">
                        <span class="fw-semibold">@pagina.Titulo</span>
                        <button class="btn btn-sm btn-light toggle-content rounded-pill px-3"
                                data-target="pagina-@pagina.Codigo">
                            ▼ Detalhes
                        </button>
                    </div>
                    <div class="card-body bg-white" id="pagina-@pagina.Codigo" style="display:none;">
                        <p class="mb-3 text-secondary small">
                            <strong>Resumo:</strong> @Snippet(pagina.Conteudo, 220)
                        </p>
                        <div class="d-flex flex-wrap gap-2 mt-2">
                            <a asp-action="Gerenciar" asp-route-id="@pagina.Codigo"
                               class="btn btn-warning btn-sm d-flex align-items-center gap-1 shadow-sm">Editar</a>
                            <a asp-action="Excluir" asp-route-id="@pagina.Codigo"
                               class="btn btn-danger btn-sm d-flex align-items-center gap-1 shadow-sm mx-2">Excluir</a>
                            <a asp-action="Exibir" asp-route-id="@pagina.Url"
                               class="btn btn-success btn-sm d-flex align-items-center gap-1 shadow-sm">Exibir</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-secondary text-center mt-4 shadow-sm">
                Nenhuma página encontrada.
            </div>
        }

        <!-- 🔹 PAGINAÇÃO -->
        @if (totalPages > 1)
        {
            <nav aria-label="Paginação" class="mt-4">
                <ul class="pagination justify-content-center mb-0">
                    <li class="page-item @(page <= 1 ? "disabled" : "")">
                        <a class="page-link" href="@(page > 1 ? BuildPageUrl(page - 1) : "#")">« Anterior</a>
                    </li>
                    @for (int p = 1; p <= totalPages; p++)
                    {
                        <li class="page-item @(p == page ? "active" : "")">
                            <a class="page-link" href="@BuildPageUrl(p)">@p</a>
                        </li>
                    }
                    <li class="page-item @(page >= totalPages ? "disabled" : "")">
                        <a class="page-link" href="@(page<totalPages? BuildPageUrl(page + 1) : "#")">Próxima »</a>
                    </li>
                </ul>
            </nav>
        }
    </main>
</div>

@section Scripts {
    <script>
        // Alterna a exibição do conteúdo das páginas
        document.querySelectorAll('.toggle-content').forEach(button => {
            button.addEventListener('click', function () {
                const targetId = this.getAttribute('data-target');
                const content = document.getElementById(targetId);
                const isExpanded = content.style.display === 'block';
                if (isExpanded) {
                    content.style.display = 'none';
                    this.textContent = '▼ Detalhes';
                    this.classList.remove('btn-dark');
                    this.classList.add('btn-light');
                } else {
                    content.style.display = 'block';
                    this.textContent = '▲ Recolher';
                    this.classList.remove('btn-light');
                    this.classList.add('btn-dark');
                }
            });
        });
    </script>
}

<style>
    /* ANIMAÇÃO SUAVE */
    .fade-in {
        animation: fadeIn 0.4s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-5px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* MENU LATERAL */
    aside .nav .btn {
        font-weight: 500;
        transition: all 0.2s ease-in-out;
        padding: 10px 12px;
        border-radius: 10px;
    }

        aside .nav .btn:hover {
            transform: translateX(4px);
            background-color: #f8f9fa;
        }

    /* BOTÕES DE AÇÃO */
    .btn {
        transition: all 0.2s ease-in-out;
    }

        .btn:hover {
            transform: translateY(-2px);
        }

    .hover-bright:hover {
        filter: brightness(1.05);
    }

    /* COR DE FUNDO SUAVE */
    body {
        background-color: #f6f8fa;
    }

    /* PAGINAÇÃO */
    .pagination .page-link {
        color: #0d6efd;
        border-radius: 6px;
    }

    .pagination .active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    /* MELHORA ESPAÇAMENTO ENTRE BOTÕES DO MENU */
    aside .nav a + a {
        margin-top: 0.75rem;
    }

    /* ESPAÇAMENTO ENTRE BOTÕES DE AÇÃO */
    .d-flex.flex-wrap.gap-2 > a {
        margin-bottom: 0.25rem;
    }
</style>
