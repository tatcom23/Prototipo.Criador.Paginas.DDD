@model Paginas.Application.DTOs.PaginaDTO
@{ ViewData["Title"] = "Editar Página Introdutória";
    var isPrincipal = Model.CdPai == null; // true = página principal, false = tópico }

<h1>@ViewData["Title"]</h1>

<form asp-action="Editar" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Codigo" />

    <div class="mb-3">
        <label asp-for="Titulo" class="form-label"></label>
        <input asp-for="Titulo" class="form-control" />
        <span asp-validation-for="Titulo" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Conteudo" class="form-label"></label>
        <textarea id="conteudoEditor" name="Conteudo" class="form-control richtext">@Model.Conteudo</textarea>
        <span asp-validation-for="Conteudo" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Url" class="form-label"></label>
        <input asp-for="Url" class="form-control" />
    </div>

    @* Banner: só para página principal *@
    @if (isPrincipal)
    {
<div class="mb-3">
    <label class="form-label">Banner da Página (imagem)</label>
    <input type="file" name="BannerFile" class="form-control" />
    @if (!string.IsNullOrEmpty(Model.Banner))
    {
<img src="@Model.Banner" class="img-fluid mt-2" style="max-height: 150px;" />}
</div> } @* Botões: somente adicionar novos, não editar existentes *@
    <h4 class="mt-4">Botões</h4>
    <div id="botoes-container"></div>
    <button type="button" id="add-botao" class="btn btn-secondary">Adicionar Botão</button>

    @* Seção de Tópicos: só aparece para página principal *@
    @if (isPrincipal)
    {
<h4 class="mt-4">Tópicos</h4>
                <div id="topicos-container"></div>
                                <button type="button" id="add-topico" class="btn btn-secondary">Adicionar Tópico</button>}

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Salvar Alterações</button>
    </div>
</form>
    }

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://cdn.tiny.cloud/1/b5d8tmun1yevgtofzef4ptf15z357dx69j8y3eu7lik3tw17/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        function initEditors(selector = 'textarea.richtext') {
            tinymce.init({
                selector: `${selector}:not([data-editor-initialized="1"])`,
                language: 'pt_BR',
                height: 400,
                plugins: ['advlist autolink lists link image charmap preview anchor searchreplace visualblocks code fullscreen insertdatetime media table help wordcount'],
                toolbar: 'undo redo | blocks | bold italic forecolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
                setup: (editor) => {
                    editor.on('init', () => {
                        editor.getElement().setAttribute('data-editor-initialized', '1');
                    });
                }
            });
        }
        initEditors();

        // Botões principais
        let botaoIndex = 0;
        document.getElementById('add-botao').addEventListener('click', function () {
            const container = document.getElementById('botoes-container');
            const div = document.createElement('div');
            div.classList.add("botao-bloco", "border", "p-3", "mb-3", "rounded");
            div.innerHTML = `
                    <label class="form-label">Nome</label>
                    <input name="Botoes[${botaoIndex}].Nome" class="form-control" />
                    <label class="form-label">Link</label>
                    <input name="Botoes[${botaoIndex}].Link" class="form-control" />
                    <label class="form-label">Linha</label>
                    <input name="Botoes[${botaoIndex}].Linha" class="form-control" />
                    <label class="form-label">Coluna</label>
                    <input name="Botoes[${botaoIndex}].Coluna" class="form-control" />`;
            container.appendChild(div);
            botaoIndex++;
        });

        // Tópicos (somente para página principal)
        const addTopicoBtn = document.getElementById('add-topico');
        if (addTopicoBtn) {
            let topicoIndex = 0;
            addTopicoBtn.addEventListener('click', function () {
                const container = document.getElementById('topicos-container');
                const idx = topicoIndex;
                const html = `
                        <div class="topico-bloco border rounded p-3 mb-3">
                            <h5>Novo Tópico</h5>
                            <input type="hidden" name="PaginaFilhos[${idx}].Ordem" value="${idx + 1}" class="topico-ordem" />
                            <label class="form-label">Título</label>
                            <input name="PaginaFilhos[${idx}].Titulo" class="form-control" />
                            <label class="form-label">Conteúdo</label>
                            <textarea id="topicoConteudo_${idx}" name="PaginaFilhos[${idx}].Conteudo" class="form-control richtext"></textarea>
                            <label class="form-label">URL</label>
                            <input name="PaginaFilhos[${idx}].Url" class="form-control" />
                            <h6 class="mt-3">Botões do Tópico</h6>
                            <div id="topico-botoes-${idx}"></div>
                            <button type="button" onclick="addBotaoTopico(${idx})" class="btn btn-sm btn-outline-primary mt-2">Adicionar Botão ao Tópico</button>
                        </div>`;
                container.insertAdjacentHTML('beforeend', html);
                initEditors(`#topicoConteudo_${idx}`);
                topicoIndex++;
            });

            window.addBotaoTopico = function (topicoIdx) {
                const container = document.getElementById(`topico-botoes-${topicoIdx}`);
                const bIndex = container.children.length;
                const html = `
                        <div class="mb-3 border p-2 rounded">
                            <label>Nome</label>
                            <input name="PaginaFilhos[${topicoIdx}].Botoes[${bIndex}].Nome" class="form-control" />
                            <label>Link</label>
                            <input name="PaginaFilhos[${topicoIdx}].Botoes[${bIndex}].Link" class="form-control" />
                            <label>Linha</label>
                            <input name="PaginaFilhos[${topicoIdx}].Botoes[${bIndex}].Linha" class="form-control" />
                            <label>Coluna</label>
                            <input name="PaginaFilhos[${topicoIdx}].Botoes[${bIndex}].Coluna" class="form-control" />
                        </div>`;
                container.insertAdjacentHTML('beforeend', html);
            };

            document.querySelector('form').addEventListener('submit', function () {
                const topicos = document.querySelectorAll('#topicos-container .topico-bloco');
                topicos.forEach((topico, index) => {
                    const inputOrdem = topico.querySelector('input.topico-ordem');
                    if (inputOrdem) inputOrdem.value = index + 1;
                });
                tinymce.triggerSave();
            });
        } else {
            document.querySelector('form').addEventListener('submit', function () {
                tinymce.triggerSave();
            });
        }
    </script>
}
